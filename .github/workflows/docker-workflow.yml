name: Docker

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  metadata:
    name: Get image and repository details
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}
      labels: ${{ steps.metadata.output.labels }}
      tags: ${{ steps.metadata.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Parse Caddy version
        id: version
        run: echo "version=$(grep -Eo 'caddy:[0-9]+\.[0-9]+\.[0-9]+$' Dockerfile | cut -d ':' -f2)" >> $GITHUB_OUTPUT

      - name: Generate metadata with Caddy version
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{minor}},value=v${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=v${{ steps.version.outputs.version }}
          labels: org.opencontainers.image.title=${{ env.IMAGE_NAME }}

  build:
    name: Build and publish the image
    runs-on: ubuntu-latest
    needs: metadata

    steps:
      - name: Check repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.metadata.outputs.tags }}
          labels: ${{ needs.metadata.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
